services:
  chainA:
    image: ghcr.io/foundry-rs/foundry:latest
    environment:
      ANVIL_IP_ADDR: "0.0.0.0"
    working_dir: /anvil
    ports:
      - "8545:8545"
    entrypoint:
      - "anvil"
      # - "--block-time"
      # - "1"
      - "--chain-id"
      - "31337"

  chainB:
    image: "ghcr.io/foundry-rs/foundry:latest"
    environment:
      ANVIL_IP_ADDR: "0.0.0.0"
    working_dir: /anvil
    ports:
      - "8546:8545"
    entrypoint:
      - "anvil"
      # - "--block-time"
      # - "1"
      - "--chain-id"
      - "31338"

  contractDeployer:
    image: "node:latest"
    working_dir: /var/www/
    environment:
      OWNER_A_PRIVATE_KEY: "ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
      OWNER_B_PRIVATE_KEY: "59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"
      CHAIN_A_RPC_URL: http://chainA:8545
      CHAIN_B_RPC_URL: http://chainB:8545
      CHAIN_B_RELAY_ADDRESS: "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"
      HARDHAT_IGNITION_CONFIRM_DEPLOYMENT: true # to avoid deploy quetions
    volumes:
      - ./contracts/:/var/www/
    command: "npm run docker"

  bridge:
    image: "node:latest"
    working_dir: /var/www/
    environment:
      CHAIN_A_RPC_URL: http://chainA:8545
      CHAIN_B_RPC_URL: http://chainB:8545
      SUPER_TOKEN_ADDRESS: "0x5FbDB2315678afecb367f032d93F642f64180aa3" # it the same as we deploying to the same chains with same keys
      SUPER_TOKEN_B_ADDRESS: "0x8464135c8F25Da09e49BC8782676a84730C318bC"
      BRIDGE_ADDRESS: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
      BRIDGE_B_ADDRESS: "0x71C95911E9a5D330f4D621842EC243EE1343292e"
      PRIVATE_KEY: "5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a"
    depends_on:
      contractDeployer:
        condition: service_completed_successfully
    volumes:
      - ./bridge/:/var/www/
    command: npm ci && node index.ts
